package com.mycompany.propco_maven_new;
// Generated 16-May-2017 5:35:13 PM by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * ServiceRequest generated by hbm2java
 */
@Entity
@Table(name="serviceRequest"
    ,catalog="PROPCO_MAVEN_new"
    , uniqueConstraints = {@UniqueConstraint(columnNames="customerID"), @UniqueConstraint(columnNames="updatedByUser")} 
)
public class ServiceRequest  implements java.io.Serializable {


     private Integer serviceRequestNr;
     private Customer customer;
     private ServiceRequestActivities serviceRequestActivities;
     private String purchaseOrderNumber;
     private String invoicing;
     private String serviceType;
     private String paymentType;
     private String schedule;
     private Date serviceDate;
     private Date creationDate;
     private Date updateDate;
     private int updatedByUser;
     private byte activityCount;

    public ServiceRequest() {
    }

	
    public ServiceRequest(Customer customer, ServiceRequestActivities serviceRequestActivities, String invoicing, String serviceType, String paymentType, String schedule, Date serviceDate, Date creationDate, Date updateDate, int updatedByUser, byte activityCount) {
        this.customer = customer;
        this.serviceRequestActivities = serviceRequestActivities;
        this.invoicing = invoicing;
        this.serviceType = serviceType;
        this.paymentType = paymentType;
        this.schedule = schedule;
        this.serviceDate = serviceDate;
        this.creationDate = creationDate;
        this.updateDate = updateDate;
        this.updatedByUser = updatedByUser;
        this.activityCount = activityCount;
    }
    public ServiceRequest(Customer customer, ServiceRequestActivities serviceRequestActivities, String purchaseOrderNumber, String invoicing, String serviceType, String paymentType, String schedule, Date serviceDate, Date creationDate, Date updateDate, int updatedByUser, byte activityCount) {
       this.customer = customer;
       this.serviceRequestActivities = serviceRequestActivities;
       this.purchaseOrderNumber = purchaseOrderNumber;
       this.invoicing = invoicing;
       this.serviceType = serviceType;
       this.paymentType = paymentType;
       this.schedule = schedule;
       this.serviceDate = serviceDate;
       this.creationDate = creationDate;
       this.updateDate = updateDate;
       this.updatedByUser = updatedByUser;
       this.activityCount = activityCount;
    }
   
     @GenericGenerator(name="generator", strategy="foreign", parameters=@Parameter(name="property", value="serviceRequestActivities"))@Id @GeneratedValue(generator="generator")

    
    @Column(name="serviceRequestNr", unique=true, nullable=false)
    public Integer getServiceRequestNr() {
        return this.serviceRequestNr;
    }
    
    public void setServiceRequestNr(Integer serviceRequestNr) {
        this.serviceRequestNr = serviceRequestNr;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="customerID", unique=true, nullable=false)
    public Customer getCustomer() {
        return this.customer;
    }
    
    public void setCustomer(Customer customer) {
        this.customer = customer;
    }

@OneToOne(fetch=FetchType.LAZY)@PrimaryKeyJoinColumn
    public ServiceRequestActivities getServiceRequestActivities() {
        return this.serviceRequestActivities;
    }
    
    public void setServiceRequestActivities(ServiceRequestActivities serviceRequestActivities) {
        this.serviceRequestActivities = serviceRequestActivities;
    }

    
    @Column(name="purchaseOrderNumber", length=7)
    public String getPurchaseOrderNumber() {
        return this.purchaseOrderNumber;
    }
    
    public void setPurchaseOrderNumber(String purchaseOrderNumber) {
        this.purchaseOrderNumber = purchaseOrderNumber;
    }

    
    @Column(name="invoicing", nullable=false, length=20)
    public String getInvoicing() {
        return this.invoicing;
    }
    
    public void setInvoicing(String invoicing) {
        this.invoicing = invoicing;
    }

    
    @Column(name="serviceType", nullable=false, length=50)
    public String getServiceType() {
        return this.serviceType;
    }
    
    public void setServiceType(String serviceType) {
        this.serviceType = serviceType;
    }

    
    @Column(name="paymentType", nullable=false, length=10)
    public String getPaymentType() {
        return this.paymentType;
    }
    
    public void setPaymentType(String paymentType) {
        this.paymentType = paymentType;
    }

    
    @Column(name="schedule", nullable=false, length=7)
    public String getSchedule() {
        return this.schedule;
    }
    
    public void setSchedule(String schedule) {
        this.schedule = schedule;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="serviceDate", nullable=false, length=10)
    public Date getServiceDate() {
        return this.serviceDate;
    }
    
    public void setServiceDate(Date serviceDate) {
        this.serviceDate = serviceDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="creationDate", nullable=false, length=19)
    public Date getCreationDate() {
        return this.creationDate;
    }
    
    public void setCreationDate(Date creationDate) {
        this.creationDate = creationDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updateDate", nullable=false, length=19)
    public Date getUpdateDate() {
        return this.updateDate;
    }
    
    public void setUpdateDate(Date updateDate) {
        this.updateDate = updateDate;
    }

    
    @Column(name="updatedByUser", unique=true, nullable=false)
    public int getUpdatedByUser() {
        return this.updatedByUser;
    }
    
    public void setUpdatedByUser(int updatedByUser) {
        this.updatedByUser = updatedByUser;
    }

    
    @Column(name="ActivityCount", nullable=false)
    public byte getActivityCount() {
        return this.activityCount;
    }
    
    public void setActivityCount(byte activityCount) {
        this.activityCount = activityCount;
    }




}


