package Application;


import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.util.Iterator;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;
import propco_maven_new.HibernateUtil;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Dan.Mera
 */

public class MainMenu extends javax.swing.JFrame {

    /**
     * Creates new form MainMenu
     */
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    /*
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlOptions = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(700, 800));
        setResizable(false);

        pnlOptions.setPreferredSize(new java.awt.Dimension(700, 500));

        javax.swing.GroupLayout pnlOptionsLayout = new javax.swing.GroupLayout(pnlOptions);
        pnlOptions.setLayout(pnlOptionsLayout);
        pnlOptionsLayout.setHorizontalGroup(
            pnlOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlOptionsLayout.createSequentialGroup()
                .addContainerGap(370, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(88, 88, 88))
        );
        pnlOptionsLayout.setVerticalGroup(
            pnlOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlOptionsLayout.createSequentialGroup()
                .addContainerGap(217, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(93, 93, 93))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


/*
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel pnlOptions;
    // End of variables declaration//GEN-END:variables
    */
    private static String QUERY_COUNT_LABELS="from Labels ORDER BY LBLID";
    
    JPanel pnlOptions = new JPanel();
    JPanel pnlPage = new JPanel();
    JPanel pnlLogo = new JPanel();
    
public MainMenu() {
        ResultSet rs;
        //ResultSet rs_privileges;
        setTitle("MAIN MENU");
        setSize(600,820);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setVisible(true);
        setResizable(false);
        
	pnlOptions.setLayout(null);
        pnlLogo.setLayout(null);
        pnlPage.setLayout(null);
        
        JLabel lblLogo = new javax.swing.JLabel();
        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("Picture1.png")));
	lblLogo.setBounds(25,200,400,400);
        pnlLogo.add(lblLogo);
        
        runQueryLabels();
        
        pnlOptions.setBounds(0,0,300,820);
        pnlLogo.setBounds(300,0,300,820);
            
        //rights still pending to be investigated
        
            //System.out.println("username:"+user_id.getuser_id());
            //sqlStmt = "select full_privilege,Service_Receipt,Assign_Service_Tech,Pending_WO,Review_SR,Invoices,Reports from Users where user_name = '" + frmLogin.user_name + "'";
            //sqlStmt = "select full_privilege,Service_Receipt,Assign_Service_Tech,Pending_WO,Review_SR,Invoices,Reports from Users where UID = '" + user_id.getuser_id() + "'";
            //rs = SQLConnection.getRecordSet(sqlStmt);
            //System.out.println("row " + rs.getInt(1));
            //if (rs.getInt(1) == 0){ 
            //    for (int counter=0;counter<nr_of_buttons;counter++){
            //        if (rs.getInt(counter+1) == 0){
            //            btn[counter].setEnabled(false);        
            //        }
            //    }
            //}
        //}
        //catch(SQLException ex) {
        //    Logger.getLogger(ServiceReceipt.class.getName()).log(Level.SEVERE, null, ex);
            //if (stmt != null) { stmt.close(); }
        //    System.out.println("activity error"); 
        //    JOptionPane.showMessageDialog(null,"User does not exist.","",JOptionPane.ERROR_MESSAGE);
        //}
            	
        pnlPage.add(pnlOptions);
        pnlPage.add(pnlLogo);
        pnlPage.setSize(700,820);
        getContentPane().add(pnlPage);
        
        }

    class ReportClick implements ActionListener{
	   public void actionPerformed(ActionEvent event){
	      JButton btn = (JButton) event.getSource();
	      System.out.println(btn.getText());
	      switch (btn.getText()){
	      	case "Create Service Receipt":
                    CreateSR srFace = new CreateSR();
                    srFace.setSize(1200,840);
                    srFace.setLocationRelativeTo(null);
                    srFace.setResizable(false);
                    dispose();
                    srFace.setVisible(true);
                    System.out.println("Service Receipt");
                    break;
/*                    
	      	case "Assign Service to Technician":
                    AssignService asFace = new AssignService();
                    asFace.setSize(1280,720);
                    asFace.setLocationRelativeTo(null);
                    asFace.setResizable(false);
                    dispose();
                    asFace.setVisible(true);
                    System.out.println("Assign Service");
                    break;
                        
	      	case "Pending Work Orders":
                    PendingWO pwoFace = new PendingWO();
                    pwoFace.setSize(1280,720);
                    pwoFace.setLocationRelativeTo(null);
                    pwoFace.setResizable(false);
                    dispose();
                    pwoFace.setVisible(true);
                    break;
                                
	      	case "Review Service Receipts":
                    ReviewSR reviewsr = new ReviewSR();
                    reviewsr.setSize(1280,720);
                    reviewsr.setLocationRelativeTo(null);
                    reviewsr.setResizable(false);
                    dispose();
                    reviewsr.setVisible(true);
                    break;
                    /*
	      	case "Create Invoice":
                    CreateInvoice ciFace = new CreateInvoice();
                    ciFace.setSize(1280,720);
                    ciFace.setLocationRelativeTo(null);
                    ciFace.setResizable(false);
                    dispose();
                    ciFace.setVisible(true);
                    break;
	      	case "Reports":
                    Reports repFace = new Reports();
                    repFace.setSize(1280,720);
                    repFace.setLocationRelativeTo(null);
                    repFace.setResizable(false);
                    dispose();
                    repFace.setVisible(true);
                    break;
*/
                    default:
                    Login logscreen = new Login();
                    logscreen.setResizable(false);
                    logscreen.setSize(370,300);
                    logscreen.setLocationRelativeTo(null);
                    dispose();
                    //System.out.println("got in logout?");
                    logscreen.setVisible(true);
                    break;

            } 
        }
    }      
    
    
    private void runQueryLabels(){
        executeHQLQuery(QUERY_COUNT_LABELS);
    }

    private void executeHQLQuery(String query){
        Session session = HibernateUtil.getSessionFactory().openSession();
        Transaction tx = null;
        try{
            tx = session.beginTransaction();
            Query q = session.createQuery(query);
            List resultList = q.list();
            returnResult(resultList);
            tx.commit();
        }
        catch (HibernateException he){
            if (tx!=null) tx.rollback();
            he.printStackTrace();
        }
        finally{
            session.close();
        }
    }
    private void returnResult(List resultList){
        String lbl_name = null;
        int counter = 0;
        ReportClick handler = new ReportClick();
        //get a count first
        JButton [] btn = new JButton[resultList.size()];
        System.out.println(resultList.size());
        
        for (Iterator iterator = resultList.iterator(); iterator.hasNext();){
            com.mycompany.propco_maven_new.Labels label = (com.mycompany.propco_maven_new.Labels) iterator.next(); 
            //for(Object obj : resultList){
            //    Labels new_labels = (Labels)obj;
            lbl_name = label.getLabels();
            btn[counter] = new JButton(lbl_name);
            pnlOptions.add(btn[counter]);
            btn[counter].setEnabled(true);
            btn[counter].setBounds(20,20+110*(counter),250,80);
            btn[counter].addActionListener(handler);
            counter = counter +1;
        }
        
    }
}